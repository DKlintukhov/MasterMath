mod models;
use models::{ExerciseConfig, Expression, Operation, Response};

#[tauri::command]
fn start(config: ExerciseConfig) -> Response {
    Response {
        expressions: vec![
            Expression::Binary(
                Operation::Div,
                Box::new(Expression::Number(5.0)),
                Box::new(Expression::Number(0.0)),
            ),
            Expression::Binary(
                Operation::Add,
                Box::new(Expression::Number(5.0)),
                Box::new(Expression::Binary(
                    Operation::Mul,
                    Box::new(Expression::Number(2.0)),
                    Box::new(Expression::Number(3.0)),
                )),
            ),
            Expression::Binary(
                Operation::Div,
                Box::new(Expression::Number(5.0)),
                Box::new(Expression::Number(0.0)),
            ),
            Expression::Binary(
                Operation::Div,
                Box::new(Expression::Number(5.0)),
                Box::new(Expression::Number(0.0)),
            ),
            Expression::Binary(
                Operation::Div,
                Box::new(Expression::Number(5.0)),
                Box::new(Expression::Number(0.0)),
            ),
            Expression::Binary(
                Operation::Div,
                Box::new(Expression::Number(5.0)),
                Box::new(Expression::Number(0.0)),
            ),
            Expression::Binary(
                Operation::Add,
                Box::new(Expression::Number(5.0)),
                Box::new(Expression::Binary(
                    Operation::Mul,
                    Box::new(Expression::Number(2.0)),
                    Box::new(Expression::Number(3.0)),
                )),
            ),
            Expression::Binary(
                Operation::Add,
                Box::new(Expression::Number(5.0)),
                Box::new(Expression::Binary(
                    Operation::Mul,
                    Box::new(Expression::Number(2.0)),
                    Box::new(Expression::Number(3.0)),
                )),
            ),
            Expression::Binary(
                Operation::Add,
                Box::new(Expression::Number(5.0)),
                Box::new(Expression::Binary(
                    Operation::Mul,
                    Box::new(Expression::Number(2.0)),
                    Box::new(Expression::Number(3.0)),
                )),
            ),
            Expression::Binary(
                Operation::Add,
                Box::new(Expression::Number(5.0)),
                Box::new(Expression::Binary(
                    Operation::Mul,
                    Box::new(Expression::Number(2.0)),
                    Box::new(Expression::Number(3.0)),
                )),
            ),
            Expression::Binary(
                Operation::Add,
                Box::new(Expression::Number(5.0)),
                Box::new(Expression::Binary(
                    Operation::Mul,
                    Box::new(Expression::Number(2.0)),
                    Box::new(Expression::Number(3.0)),
                )),
            ),
            Expression::Binary(
                Operation::Add,
                Box::new(Expression::Number(5.0)),
                Box::new(Expression::Binary(
                    Operation::Mul,
                    Box::new(Expression::Number(2.0)),
                    Box::new(Expression::Number(3.0)),
                )),
            ),
            Expression::Binary(
                Operation::Add,
                Box::new(Expression::Number(5.0)),
                Box::new(Expression::Binary(
                    Operation::Mul,
                    Box::new(Expression::Number(2.0)),
                    Box::new(Expression::Number(3.0)),
                )),
            ),
        ],
    }
}

#[cfg_attr(mobile, tauri::mobile_entry_point)]
pub fn run() {
    tauri::Builder::default()
        .plugin(tauri_plugin_opener::init())
        .invoke_handler(tauri::generate_handler![start])
        .run(tauri::generate_context!())
        .expect("error while running tauri application");
}
